{
	"compilerOptions": {
		"target": "es5", //대소문자 구분 없음, es6,es2015,es2016,esnext
		"lib": ["dom", "dom.iterable", "esnext"],
		//dom : 웹 브라우저환경에서 DOM API에 대한 타입 정의 포함 document, dindow, Event, Node, HTMLElement 포함
		//dom.iterable : DOM APU에서 사용 가능한 iterable 프로토콜에 대한 타입 정의를 포함 NodeList, HTMLCollection 등의 타입이 for..of문에서 사용가능
		// esnext : 가장 최신 ECMAScript 사양에 대한 타입 정의를 포함한다. 이는 표준화 되지 않았거나 최신 브라우저만 지원하는 ECMAScript 기능에 대한 타입 정의를 포함
		"allowJs": true, //자바스크립트를 컴파일에 포함할지
		"skipLibCheck": true, //모든 선언 파일 타입검사를 건너뛸지
		"strict": true, // 엄격하게 검사할지
		"noEmit": true, //출력 파일을 생성하지 않을지
		"esModuleInterop": true, //ES 모듈과 CommonJS 모듈 간의 상호 운용성을 허용할지 여부
		"module": "esnext", //모듈 코드 생성을 위한 ECMAScript 버전을 esnext => 지정은 가장 최신 ECMAScript 모듈 시스템을 사용하여 모듈 생성
		"moduleResolution": "bundler", //이 모드는 ESM과 CommonJS모두지원, 다만 가져오는 파일의 상대 경로에 파일 확정명을 생략할수있다.
		"resolveJsonModule": true, //json모듈을 임폴트할지
		"isolatedModules": true, //각 파일을 별도의 모듈로 처리할지 여부
		"jsx": "preserve", //JSX부분을 그대로 유지, 이는 JSX나중에 다른변환 단계 Babel에서 처리하려는 경우에 유용하다
		"incremental": true, //증분 컴파일을 사용항지 여부 지정
		"plugins": [
			{
				"name": "next"
			}
		],
		"paths": {
			"@/*": ["./src/*"]
		}
	},
	"include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
	"exclude": ["node_modules"]
}
